version: "2.4"

services:

  httpd:
    image: httpd
    labels:
      traefik.enable: true
      traefik.http.routers.httpd.rule: Host(`httpd.${MAIN_DOMAIN}`)
      traefik.http.routers.httpd.entrypoints: websecure
      traefik.http.routers.httpd.tls: true
    depends_on:
      traefik:
        condition: service_healthy


  nginx:
    image: nginx
    labels:
      traefik.enable: true
      traefik.http.routers.nginx.rule: Host(`nginx.${MAIN_DOMAIN}`)
      traefik.http.routers.nginx.entrypoints: websecure
      traefik.http.routers.nginx.tls: true
    depends_on:
      traefik:
        condition: service_healthy

  traefik:
    image: "traefik:v2.2"
    environment:
       DO_AUTH_TOKEN: ${DO_AUTH_TOKEN}
    labels:
      traefik.enable: true
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: leresolver
      traefik.http.routers.traefik.tls.domains[0].main: ${MAIN_DOMAIN}
      traefik.http.routers.traefik.tls.domains[0].sans: ${SANS_DOMAIN}
    healthcheck:
      test: 
        - CMD
        - traefik
        - healthcheck
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./traefik.yaml:/etc/traefik/traefik.yaml
      - ./cert/acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock

